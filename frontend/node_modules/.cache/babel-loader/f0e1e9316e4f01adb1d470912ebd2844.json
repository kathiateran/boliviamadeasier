{"ast":null,"code":"var _jsxFileName = \"/Users/kathiateran/Documents/Projects/e-tourism/frontend/src/screens/ShippingScreen.js\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { saveShippingAddress } from '../actions/cartActions';\n\nconst ShippingScreen = ({\n  history\n}) => {\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter address\",\n    value: address,\n    required: true,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter city\",\n    value: city,\n    required: true,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"postalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter postal code\",\n    value: postalCode,\n    required: true,\n    onChange: e => setPostalCode(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter country\",\n    value: country,\n    required: true,\n    onChange: e => setCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Continue\")));\n};\n\nexport default ShippingScreen;","map":{"version":3,"sources":["/Users/kathiateran/Documents/Projects/e-tourism/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector((state) => state.cart)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n      }\n\n    return <FormContainer>\n        <h1>Shipping</h1>\n        <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n\n        </Form>\n    </FormContainer>\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}